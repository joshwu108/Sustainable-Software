{"ast":null,"code":"var _jsxFileName = \"/Users/kacemettahali/Desktop/sustainable_software-2/crop-yield-app/frontend/src/components/PredictionResult.js\";\nimport React from 'react';\nimport { Card, Row, Col, Badge } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PredictionResult({\n  result\n}) {\n  if (!result) return null;\n  const {\n    predicted_yield,\n    confidence,\n    crop,\n    area\n  } = result;\n\n  // Calculate yield rating\n  let yieldRating;\n  if (predicted_yield < 10) yieldRating = 'Low';else if (predicted_yield < 25) yieldRating = 'Moderate';else if (predicted_yield < 40) yieldRating = 'Good';else yieldRating = 'Excellent';\n\n  // Get badge color based on yield rating\n  const getBadgeVariant = () => {\n    switch (yieldRating) {\n      case 'Low':\n        return 'danger';\n      case 'Moderate':\n        return 'warning';\n      case 'Good':\n        return 'info';\n      case 'Excellent':\n        return 'success';\n      default:\n        return 'primary';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"shadow-sm mt-4 prediction-result\",\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      className: \"bg-success text-white\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"mb-0\",\n        children: \"Prediction Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Predicted Yield: \", predicted_yield.toFixed(2), \" tonnes/hectare\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Badge, {\n          bg: getBadgeVariant(),\n          className: \"mt-2 p-2 fs-5\",\n          children: [yieldRating, \" Yield\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"h-100\",\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: \"Crop Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Crop Type:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 19\n                }, this), \" \", crop, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Growing Region:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 19\n                }, this), \" \", area, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 58\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"h-100\",\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: \"Prediction Quality\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Confidence Level:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 19\n                }, this), \" \", (confidence * 100).toFixed(1), \"%\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 86\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Model:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 19\n                }, this), \" Random Forest Regressor\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 66\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3 text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-muted\",\n          children: \"Note: This prediction is based on the environmental factors and historical data. Actual yield may vary depending on specific farming practices and unforeseen conditions.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_c = PredictionResult;\nexport default PredictionResult;\nvar _c;\n$RefreshReg$(_c, \"PredictionResult\");","map":{"version":3,"names":["React","Card","Row","Col","Badge","jsxDEV","_jsxDEV","PredictionResult","result","predicted_yield","confidence","crop","area","yieldRating","getBadgeVariant","className","children","Header","fileName","_jsxFileName","lineNumber","columnNumber","Body","toFixed","bg","md","Title","Text","_c","$RefreshReg$"],"sources":["/Users/kacemettahali/Desktop/sustainable_software-2/crop-yield-app/frontend/src/components/PredictionResult.js"],"sourcesContent":["import React from 'react';\nimport { Card, Row, Col, Badge } from 'react-bootstrap';\n\nfunction PredictionResult({ result }) {\n  if (!result) return null;\n\n  const { predicted_yield, confidence, crop, area } = result;\n  \n  // Calculate yield rating\n  let yieldRating;\n  if (predicted_yield < 10) yieldRating = 'Low';\n  else if (predicted_yield < 25) yieldRating = 'Moderate';\n  else if (predicted_yield < 40) yieldRating = 'Good';\n  else yieldRating = 'Excellent';\n  \n  // Get badge color based on yield rating\n  const getBadgeVariant = () => {\n    switch (yieldRating) {\n      case 'Low': return 'danger';\n      case 'Moderate': return 'warning';\n      case 'Good': return 'info';\n      case 'Excellent': return 'success';\n      default: return 'primary';\n    }\n  };\n\n  return (\n    <Card className=\"shadow-sm mt-4 prediction-result\">\n      <Card.Header className=\"bg-success text-white\">\n        <h4 className=\"mb-0\">Prediction Results</h4>\n      </Card.Header>\n      <Card.Body>\n        <div className=\"text-center mb-4\">\n          <h2>Predicted Yield: {predicted_yield.toFixed(2)} tonnes/hectare</h2>\n          <Badge \n            bg={getBadgeVariant()} \n            className=\"mt-2 p-2 fs-5\"\n          >\n            {yieldRating} Yield\n          </Badge>\n        </div>\n        \n        <Row className=\"mt-4\">\n          <Col md={6} className=\"mb-3\">\n            <Card className=\"h-100\">\n              <Card.Body>\n                <Card.Title>Crop Details</Card.Title>\n                <Card.Text>\n                  <strong>Crop Type:</strong> {crop}<br />\n                  <strong>Growing Region:</strong> {area}<br />\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </Col>\n          \n          <Col md={6} className=\"mb-3\">\n            <Card className=\"h-100\">\n              <Card.Body>\n                <Card.Title>Prediction Quality</Card.Title>\n                <Card.Text>\n                  <strong>Confidence Level:</strong> {(confidence * 100).toFixed(1)}%<br />\n                  <strong>Model:</strong> Random Forest Regressor<br />\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n        \n        <div className=\"mt-3 text-center\">\n          <p className=\"text-muted\">\n            Note: This prediction is based on the environmental factors and historical data.\n            Actual yield may vary depending on specific farming practices and unforeseen conditions.\n          </p>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default PredictionResult; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,GAAG,EAAEC,GAAG,EAAEC,KAAK,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,SAASC,gBAAgBA,CAAC;EAAEC;AAAO,CAAC,EAAE;EACpC,IAAI,CAACA,MAAM,EAAE,OAAO,IAAI;EAExB,MAAM;IAAEC,eAAe;IAAEC,UAAU;IAAEC,IAAI;IAAEC;EAAK,CAAC,GAAGJ,MAAM;;EAE1D;EACA,IAAIK,WAAW;EACf,IAAIJ,eAAe,GAAG,EAAE,EAAEI,WAAW,GAAG,KAAK,CAAC,KACzC,IAAIJ,eAAe,GAAG,EAAE,EAAEI,WAAW,GAAG,UAAU,CAAC,KACnD,IAAIJ,eAAe,GAAG,EAAE,EAAEI,WAAW,GAAG,MAAM,CAAC,KAC/CA,WAAW,GAAG,WAAW;;EAE9B;EACA,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,QAAQD,WAAW;MACjB,KAAK,KAAK;QAAE,OAAO,QAAQ;MAC3B,KAAK,UAAU;QAAE,OAAO,SAAS;MACjC,KAAK,MAAM;QAAE,OAAO,MAAM;MAC1B,KAAK,WAAW;QAAE,OAAO,SAAS;MAClC;QAAS,OAAO,SAAS;IAC3B;EACF,CAAC;EAED,oBACEP,OAAA,CAACL,IAAI;IAACc,SAAS,EAAC,kCAAkC;IAAAC,QAAA,gBAChDV,OAAA,CAACL,IAAI,CAACgB,MAAM;MAACF,SAAS,EAAC,uBAAuB;MAAAC,QAAA,eAC5CV,OAAA;QAAIS,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAC;MAAkB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACdf,OAAA,CAACL,IAAI,CAACqB,IAAI;MAAAN,QAAA,gBACRV,OAAA;QAAKS,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/BV,OAAA;UAAAU,QAAA,GAAI,mBAAiB,EAACP,eAAe,CAACc,OAAO,CAAC,CAAC,CAAC,EAAC,iBAAe;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrEf,OAAA,CAACF,KAAK;UACJoB,EAAE,EAAEV,eAAe,CAAC,CAAE;UACtBC,SAAS,EAAC,eAAe;UAAAC,QAAA,GAExBH,WAAW,EAAC,QACf;QAAA;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAENf,OAAA,CAACJ,GAAG;QAACa,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnBV,OAAA,CAACH,GAAG;UAACsB,EAAE,EAAE,CAAE;UAACV,SAAS,EAAC,MAAM;UAAAC,QAAA,eAC1BV,OAAA,CAACL,IAAI;YAACc,SAAS,EAAC,OAAO;YAAAC,QAAA,eACrBV,OAAA,CAACL,IAAI,CAACqB,IAAI;cAAAN,QAAA,gBACRV,OAAA,CAACL,IAAI,CAACyB,KAAK;gBAAAV,QAAA,EAAC;cAAY;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACrCf,OAAA,CAACL,IAAI,CAAC0B,IAAI;gBAAAX,QAAA,gBACRV,OAAA;kBAAAU,QAAA,EAAQ;gBAAU;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,KAAC,EAACV,IAAI,eAACL,OAAA;kBAAAY,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACxCf,OAAA;kBAAAU,QAAA,EAAQ;gBAAe;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,KAAC,EAACT,IAAI,eAACN,OAAA;kBAAAY,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eAENf,OAAA,CAACH,GAAG;UAACsB,EAAE,EAAE,CAAE;UAACV,SAAS,EAAC,MAAM;UAAAC,QAAA,eAC1BV,OAAA,CAACL,IAAI;YAACc,SAAS,EAAC,OAAO;YAAAC,QAAA,eACrBV,OAAA,CAACL,IAAI,CAACqB,IAAI;cAAAN,QAAA,gBACRV,OAAA,CAACL,IAAI,CAACyB,KAAK;gBAAAV,QAAA,EAAC;cAAkB;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eAC3Cf,OAAA,CAACL,IAAI,CAAC0B,IAAI;gBAAAX,QAAA,gBACRV,OAAA;kBAAAU,QAAA,EAAQ;gBAAiB;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,KAAC,EAAC,CAACX,UAAU,GAAG,GAAG,EAAEa,OAAO,CAAC,CAAC,CAAC,EAAC,GAAC,eAAAjB,OAAA;kBAAAY,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACzEf,OAAA;kBAAAU,QAAA,EAAQ;gBAAM;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,4BAAwB,eAAAf,OAAA;kBAAAY,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5C,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENf,OAAA;QAAKS,SAAS,EAAC,kBAAkB;QAAAC,QAAA,eAC/BV,OAAA;UAAGS,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAG1B;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEX;AAACO,EAAA,GA1EQrB,gBAAgB;AA4EzB,eAAeA,gBAAgB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}